<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nim.webrtc.api.mapper.FaceTimeMapper">
    <select id="selectObjectType" resultType="java.util.Map" statementType="STATEMENT">
        SELECT f_id AS id, f_name AS name, f_aliasname AS alias FROM tbcm_objectinfo WHERE f_is_support_video = 1
    </select>
    <select id="selectOrderDate" resultType="java.util.Map" statementType="STATEMENT">
        SELECT f_id AS id, f_fhrq AS day FROM tb_video_calldate WHERE f_fhrq = '${date}' AND f_state = 1 AND f_biz_id = '${bizId}'
    </select>
    <select id="selectTimeSegments" resultType="java.util.Map" statementType="STATEMENT">
        SELECT f_id AS id, f_name AS segment, f_begintime AS startTime, f_endtime AS endTime, f_yy_count AS orderCount
        FROM tb_video_calltime
        WHERE f_fhrq_id = '${dateId}'
        ORDER BY f_begintime
    </select>
    <select id="selectFaceTimeOverview" resultType="java.util.Map" statementType="STATEMENT">
        SELECT COUNT(*), f_state AS state FROM tb_video_takenumber WHERE f_biz_id = '${bizId}' GROUP BY f_state ORDER BY f_state
    </select>
    <select id="selectFaceTimeRecord" resultType="java.util.Map" statementType="STATEMENT">
        WITH t0 AS (
        SELECT
        f_id AS ID,
        f_takenumber_id AS takenumberId,
        f_begintime AS startTime,
        f_endtime AS endTime,
        f_wyry_id AS userId,
        f_ddy_id AS ddyId,
        f_roomid AS roomId,
        f_filepath AS filePath,
        f_biz_id AS bizId
        FROM
        tb_video_record T
        ORDER BY
        f_begintime DESC
        <choose>
            <when test="limit>0 and page>0">
                LIMIT ${limit} OFFSET ${limit} * (${page} - 1)
            </when>
        </choose>
        ),
        t1 AS ( SELECT t0.*, t2.f_username AS username FROM t0 LEFT JOIN tbsys_user t2 ON t0.userId = t2.f_userid ),
        t3 AS (
        SELECT A
        .*
        FROM
        tb_video_devicestate A,
        ( SELECT f_recordid, MAX ( f_createtime ) f_createtime FROM tb_video_devicestate GROUP BY f_recordid ) b
        WHERE
        A.f_recordid = b.f_recordid
        AND A.f_createtime = b.f_createtime
        ORDER BY
        A.f_recordid
        ),
        t4 AS (
        SELECT
        t1.*,
        t3.f_X AS to_x,
        t3.f_y AS to_y
        FROM
        t1
        LEFT JOIN t3 ON t1.ID = t3.f_recordid
        ),
        t5 AS (
        SELECT
        t4.*,
        t6.f_tbbh AS tbid,
        t6.f_layer_id AS layerid,
        t6.f_xzqdm AS to_xzqdm
        FROM
        t4
        LEFT JOIN tb_video_takenumber t6 ON t4.takenumberId = t6.f_id
        ),
        t7 AS ( SELECT t5.*, t8.f_depid AS depId FROM t5 LEFT JOIN tbsys_user t8 ON t5.ddyId = t8.f_userid ),
        t9 AS (
        SELECT
        t7.*,
        SUBSTRING (( t10.f_xzqdm || '000000' ), 0, 7 ) AS from_xzqdm
        FROM
        t7
        LEFT JOIN tb_department t10 ON t7.depId = t10.f_id
        ),
        t11 AS (
        SELECT
        t9.*,
        t12.f_centerx AS from_x,
        t12.f_centery AS from_y
        FROM
        t9
        LEFT JOIN tb_region t12 ON t9.from_xzqdm = t12.f_xzqdm
        ) SELECT
        *
        FROM
        t11
    </select>
    <select id="selectFaceTimeList" resultType="java.util.Map" statementType="STATEMENT">
        WITH t1 AS (
        SELECT
        f_id AS ID,
        f_yy_id AS orderId,
        f_tbbh AS tbbh,
        f_layer_id AS layerId,
        f_state AS STATE,
        f_ddy_id AS ddyId,
        f_wyry_id AS userId,
        f_wyryname AS username,
        f_serialnumber AS serialnumber,
        f_conn_state AS connState,
        f_islock AS islock
        FROM
        tb_video_takenumber
        WHERE
        f_fhsd_id = '${segmentId}'
        AND f_state = ${state}
        ORDER BY
        f_serialnumber
        <choose>
            <when test="limit>0 and page>0">
                LIMIT ${limit} OFFSET ${limit} * (${page} - 1)
            </when>
        </choose>
        ) SELECT
        t1.*,
        ( CASE WHEN t2.f_userid IS NULL THEN 0 ELSE 1 END ) AS islogin
        FROM
        t1
        LEFT JOIN ( SELECT f_userid FROM tbsys_user WHERE f_updatetime > ( now() - '00:01:01' :: INTERVAL ) AND f_islogin = 1 ) t2 ON t1.userId = t2.f_userid
    </select>
    <select id="selectFaceTimeCoords" resultType="java.util.Map" statementType="STATEMENT">
        SELECT
            f_x AS x,
            f_y AS y,
            f_angel AS angel,
            f_userid AS userid,
            f_createtime AS createtime
        FROM
            tb_video_devicestate
        WHERE
            f_recordid = '${id}'
        ORDER BY
            f_createtime
    </select>
    <insert id="insertFaceTimeRecord" statementType="STATEMENT">

    </insert>
    <update id="updateFaceTimeState" statementType="STATEMENT">
        UPDATE tb_video_takenumber SET f_state = ${state}, f_conn_state = ${connState} WHERE f_id = '${id}';
    </update>
    <update id="lockFaceTime" statementType="STATEMENT">
        UPDATE tb_video_takenumber SET f_islock = 1 WHERE f_id = '${id}';
    </update>
    <update id="unlockFaceTime" statementType="STATEMENT">
        UPDATE tb_video_takenumber SET f_islock = 0 WHERE f_id = '${id}';
    </update>
</mapper>